

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Jan  7 05:14:48 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000E                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0015                     	;# 
    30  0016                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001B                     	;# 
    37  001C                     	;# 
    38  008C                     	;# 
    39  008E                     	;# 
    40  0091                     	;# 
    41  0092                     	;# 
    42  0095                     	;# 
    43  0096                     	;# 
    44  0097                     	;# 
    45  0098                     	;# 
    46  0099                     	;# 
    47  009A                     	;# 
    48  009B                     	;# 
    49  009B                     	;# 
    50  009C                     	;# 
    51  009D                     	;# 
    52  009E                     	;# 
    53  009F                     	;# 
    54  010C                     	;# 
    55  010E                     	;# 
    56  0111                     	;# 
    57  0112                     	;# 
    58  0113                     	;# 
    59  0114                     	;# 
    60  0115                     	;# 
    61  0116                     	;# 
    62  0117                     	;# 
    63  0118                     	;# 
    64  0119                     	;# 
    65  011D                     	;# 
    66  018C                     	;# 
    67  018E                     	;# 
    68  0191                     	;# 
    69  0191                     	;# 
    70  0192                     	;# 
    71  0193                     	;# 
    72  0193                     	;# 
    73  0194                     	;# 
    74  0195                     	;# 
    75  0196                     	;# 
    76  0197                     	;# 
    77  0199                     	;# 
    78  019A                     	;# 
    79  019B                     	;# 
    80  019B                     	;# 
    81  019C                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  019F                     	;# 
    85  020C                     	;# 
    86  0211                     	;# 
    87  0211                     	;# 
    88  0212                     	;# 
    89  0212                     	;# 
    90  0213                     	;# 
    91  0213                     	;# 
    92  0214                     	;# 
    93  0214                     	;# 
    94  0215                     	;# 
    95  0215                     	;# 
    96  0215                     	;# 
    97  0216                     	;# 
    98  0216                     	;# 
    99  0217                     	;# 
   100  0217                     	;# 
   101  0391                     	;# 
   102  0392                     	;# 
   103  0393                     	;# 
   104  039A                     	;# 
   105  039B                     	;# 
   106  0611                     	;# 
   107  0612                     	;# 
   108  0613                     	;# 
   109  0613                     	;# 
   110  0614                     	;# 
   111  0615                     	;# 
   112  0616                     	;# 
   113  0616                     	;# 
   114  0691                     	;# 
   115  0692                     	;# 
   116  0693                     	;# 
   117  0694                     	;# 
   118  0695                     	;# 
   119  0E8E                     	;# 
   120  0E8F                     	;# 
   121  0E90                     	;# 
   122  0E91                     	;# 
   123  0E92                     	;# 
   124  0E93                     	;# 
   125  0E94                     	;# 
   126  0E94                     	;# 
   127  0E95                     	;# 
   128  0E96                     	;# 
   129  0E97                     	;# 
   130  0E98                     	;# 
   131  0E99                     	;# 
   132  0E9A                     	;# 
   133  0E9B                     	;# 
   134  0E9C                     	;# 
   135  0E9D                     	;# 
   136  0E9E                     	;# 
   137  0E9F                     	;# 
   138  0FE4                     	;# 
   139  0FE5                     	;# 
   140  0FE6                     	;# 
   141  0FE7                     	;# 
   142  0FE8                     	;# 
   143  0FE9                     	;# 
   144  0FEA                     	;# 
   145  0FEB                     	;# 
   146  0FED                     	;# 
   147  0FEE                     	;# 
   148  0FEF                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000E                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  008C                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010E                     	;# 
   192  0111                     	;# 
   193  0112                     	;# 
   194  0113                     	;# 
   195  0114                     	;# 
   196  0115                     	;# 
   197  0116                     	;# 
   198  0117                     	;# 
   199  0118                     	;# 
   200  0119                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018E                     	;# 
   204  0191                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0194                     	;# 
   210  0195                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019D                     	;# 
   219  019E                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0391                     	;# 
   238  0392                     	;# 
   239  0393                     	;# 
   240  039A                     	;# 
   241  039B                     	;# 
   242  0611                     	;# 
   243  0612                     	;# 
   244  0613                     	;# 
   245  0613                     	;# 
   246  0614                     	;# 
   247  0615                     	;# 
   248  0616                     	;# 
   249  0616                     	;# 
   250  0691                     	;# 
   251  0692                     	;# 
   252  0693                     	;# 
   253  0694                     	;# 
   254  0695                     	;# 
   255  0E8E                     	;# 
   256  0E8F                     	;# 
   257  0E90                     	;# 
   258  0E91                     	;# 
   259  0E92                     	;# 
   260  0E93                     	;# 
   261  0E94                     	;# 
   262  0E94                     	;# 
   263  0E95                     	;# 
   264  0E96                     	;# 
   265  0E97                     	;# 
   266  0E98                     	;# 
   267  0E99                     	;# 
   268  0E9A                     	;# 
   269  0E9B                     	;# 
   270  0E9C                     	;# 
   271  0E9D                     	;# 
   272  0E9E                     	;# 
   273  0E9F                     	;# 
   274  0FE4                     	;# 
   275  0FE5                     	;# 
   276  0FE6                     	;# 
   277  0FE7                     	;# 
   278  0FE8                     	;# 
   279  0FE9                     	;# 
   280  0FEA                     	;# 
   281  0FEB                     	;# 
   282  0FED                     	;# 
   283  0FEE                     	;# 
   284  0FEF                     	;# 
   285  000E                     _PORTC	set	14
   286  005F                     _GIE	set	95
   287  005E                     _PEIE	set	94
   288  008D                     _RCIF	set	141
   289  008C                     _TXIF	set	140
   290  0099                     _OSCCONbits	set	153
   291  008E                     _TRISCbits	set	142
   292  048D                     _RCIE	set	1165
   293  0474                     _TRISC4	set	1140
   294  0475                     _TRISC5	set	1141
   295  019B                     _SPBRG	set	411
   296  0199                     _RCREG	set	409
   297  019D                     _RCSTA	set	413
   298  019A                     _TXREG	set	410
   299  019E                     _TXSTA	set	414
   300                           
   301                           	psect	text0
   302  0000                     __ptext0:	
   303                           
   304                           ;psect for function _getch
   305                           ; #config settings
   306  0000                     
   307                           	psect	cinit
   308  0031                     start_initialization:	
   309  0031                     __initialization:	
   310                           
   311                           ; Clear objects allocated to COMMON
   312  0031  01F0               	clrf	__pbssCOMMON& (0+127)
   313  0032  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0033  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0034  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   316  0035  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   317  0036  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   318  0037  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   319  0038  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   320  0039  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   321  003A  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   322  003B                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  003B                     __end_of__initialization:	
   326  003B  0020               	movlb	0
   327  003C  3180  283E         	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0070                     __pbssCOMMON:	
   331  0070                     _packetBuffer:	
   332  0070                     	ds	6
   333  0076                     _i:	
   334  0076                     	ds	1
   335  0077                     _packetCorrupt:	
   336  0077                     	ds	1
   337  0078                     _packetReceived:	
   338  0078                     	ds	1
   339  0079                     _rxchar:	
   340  0079                     	ds	1
   341                           
   342                           	psect	cstackCOMMON
   343  007A                     __pcstackCOMMON:	
   344  007A                     ??_getch:	
   345  007A                     ?_ISR:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  007A                     ??_ISR:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  007A                     ?_setup:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  007A                     ?_main:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  007A                     ?_getch:	
   358                           ; 0 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  007A                     	ds	2
   363  007C                     ??_setup:	
   364  007C                     ??_main:	
   365                           ; 0 bytes @ 0x2
   366                           
   367                           
   368                           	psect	maintext
   369  003E                     __pmaintext:	
   370                           ; 0 bytes @ 0x2
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 96 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;		None               void
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 17F/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_setup
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  003E                     _main:	
   406                           
   407                           ;main.c: 97: setup();
   408                           
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   411  003E  3180  2090  3180   	fcall	_setup
   412  0041  2886               	goto	l512
   413  0042                     l516:	
   414  0042  0875               	movf	_packetBuffer+5,w
   415  0043  3A03               	xorlw	3
   416  0044  1D03               	skipz
   417  0045  288D               	goto	l69
   418                           
   419                           ;main.c: 104: {
   420                           ;main.c: 106: if (packetBuffer[1] == 0)
   421  0046  08F1               	movf	_packetBuffer+1,f
   422  0047  1D03               	skipz
   423  0048  285A               	goto	l532
   424                           
   425                           ;main.c: 107: {
   426                           ;main.c: 109: if (packetBuffer[3] == 0)
   427  0049  08F3               	movf	_packetBuffer+3,f
   428  004A  1D03               	skipz
   429  004B  284E               	goto	l524
   430                           
   431                           ;main.c: 110: {
   432                           ;main.c: 112: PORTC = 0b00000100;
   433  004C  3004               	movlw	4
   434  004D  2884               	goto	L7
   435  004E                     l524:	
   436                           ;main.c: 113: }
   437                           
   438                           
   439                           ;main.c: 114: else if (packetBuffer[3] == 1)
   440  004E  0873               	movf	_packetBuffer+3,w
   441  004F  3A01               	xorlw	1
   442  0050  1D03               	skipz
   443  0051  2854               	goto	l528
   444                           
   445                           ;main.c: 115: {
   446                           ;main.c: 117: PORTC = 0b00001001;
   447  0052  3009               	movlw	9
   448  0053  2884               	goto	L7
   449  0054                     l528:	
   450                           ;main.c: 118: }
   451                           
   452                           
   453                           ;main.c: 119: else if (packetBuffer[3] == 2)
   454  0054  0873               	movf	_packetBuffer+3,w
   455  0055  3A02               	xorlw	2
   456  0056  1D03               	skipz
   457  0057  288D               	goto	l69
   458                           
   459                           ;main.c: 120: {
   460                           ;main.c: 122: PORTC = 0b00001000;
   461  0058  3008               	movlw	8
   462  0059  2884               	goto	L7
   463  005A                     l532:	
   464                           ;main.c: 128: }
   465                           ;main.c: 129: }
   466                           
   467                           ;main.c: 124: else
   468                           ;main.c: 125: {
   469                           ;main.c: 127: packetCorrupt = 1;
   470                           
   471                           ;main.c: 123: }
   472                           
   473                           
   474                           ;main.c: 130: else if (packetBuffer[1] == 1)
   475  005A  0871               	movf	_packetBuffer+1,w
   476  005B  3A01               	xorlw	1
   477  005C  1D03               	skipz
   478  005D  2870               	goto	l546
   479                           
   480                           ;main.c: 131: {
   481                           ;main.c: 133: if (packetBuffer[3] == 0)
   482  005E  08F3               	movf	_packetBuffer+3,f
   483  005F  1D03               	skipz
   484  0060  2863               	goto	l538
   485                           
   486                           ;main.c: 134: {
   487                           ;main.c: 136: PORTC = 0b00000101;
   488  0061  3005               	movlw	5
   489  0062  2884               	goto	L7
   490  0063                     l538:	
   491                           ;main.c: 137: }
   492                           
   493                           
   494                           ;main.c: 138: else if (packetBuffer[3] == 1)
   495  0063  0873               	movf	_packetBuffer+3,w
   496  0064  3A01               	xorlw	1
   497  0065  1D03               	skipz
   498  0066  286A               	goto	l542
   499                           
   500                           ;main.c: 139: {
   501                           ;main.c: 141: PORTC = 0b00000000;
   502  0067  0020               	movlb	0	; select bank0
   503  0068  018E               	clrf	14	;volatile
   504                           
   505                           ;main.c: 142: }
   506  0069  2886               	goto	l512
   507  006A                     l542:	
   508                           
   509                           ;main.c: 143: else if (packetBuffer[3] == 2)
   510  006A  0873               	movf	_packetBuffer+3,w
   511  006B  3A02               	xorlw	2
   512  006C  1D03               	skipz
   513  006D  288D               	goto	l69
   514                           
   515                           ;main.c: 144: {
   516                           ;main.c: 146: PORTC = 0b00001010;
   517  006E  300A               	movlw	10
   518  006F  2884               	goto	L7
   519  0070                     l546:	
   520                           ;main.c: 152: }
   521                           ;main.c: 153: }
   522                           
   523                           ;main.c: 148: else
   524                           ;main.c: 149: {
   525                           ;main.c: 151: packetCorrupt = 1;
   526                           
   527                           ;main.c: 147: }
   528                           
   529                           
   530                           ;main.c: 154: else if (packetBuffer[1] == 2)
   531  0070  0871               	movf	_packetBuffer+1,w
   532  0071  3A02               	xorlw	2
   533  0072  1D03               	skipz
   534  0073  288D               	goto	l69
   535                           
   536                           ;main.c: 155: {
   537                           ;main.c: 157: if (packetBuffer[3] == 0)
   538  0074  08F3               	movf	_packetBuffer+3,f
   539  0075  1D03               	skipz
   540  0076  2879               	goto	l552
   541                           
   542                           ;main.c: 158: {
   543                           ;main.c: 160: PORTC = 0b00000010;
   544  0077  3002               	movlw	2
   545  0078  2884               	goto	L7
   546  0079                     l552:	
   547                           ;main.c: 161: }
   548                           
   549                           
   550                           ;main.c: 162: else if (packetBuffer[3] == 1)
   551  0079  0873               	movf	_packetBuffer+3,w
   552  007A  3A01               	xorlw	1
   553  007B  1D03               	skipz
   554  007C  287F               	goto	l556
   555                           
   556                           ;main.c: 163: {
   557                           ;main.c: 165: PORTC = 0b00000110;
   558  007D  3006               	movlw	6
   559  007E  2884               	goto	L7
   560  007F                     l556:	
   561                           ;main.c: 166: }
   562                           
   563                           
   564                           ;main.c: 167: else if (packetBuffer[3] == 2)
   565  007F  0873               	movf	_packetBuffer+3,w
   566  0080  3A02               	xorlw	2
   567  0081  1D03               	skipz
   568  0082  288D               	goto	l69
   569                           
   570                           ;main.c: 168: {
   571                           ;main.c: 170: PORTC = 0b00000001;
   572  0083  3001               	movlw	1
   573  0084                     L7:	
   574  0084  0020               	movlb	0	; select bank0
   575  0085  008E               	movwf	14	;volatile
   576  0086                     l512:	
   577                           ;main.c: 99: while (1)
   578                           
   579                           ;main.c: 182: }
   580                           ;main.c: 184: }
   581                           
   582                           ;main.c: 171: }
   583                           
   584                           
   585                           ;main.c: 100: {
   586                           ;main.c: 101: if (packetReceived)
   587  0086  0878               	movf	_packetReceived,w
   588  0087  1903               	btfsc	3,2
   589  0088  2886               	goto	l512
   590                           
   591                           ;main.c: 102: {
   592                           ;main.c: 103: if (packetBuffer[0] == 0x02 && packetBuffer[5] == 0x03)
   593  0089  0870               	movf	_packetBuffer,w
   594  008A  3A02               	xorlw	2
   595  008B  1903               	btfsc	3,2
   596  008C  2842               	goto	l516
   597  008D                     l69:	
   598                           ;main.c: 176: }
   599                           ;main.c: 177: }
   600                           
   601                           ;main.c: 172: else
   602                           ;main.c: 173: {
   603                           ;main.c: 175: packetCorrupt = 1;
   604                           
   605                           
   606                           ;main.c: 178: else
   607                           ;main.c: 179: {
   608                           ;main.c: 181: packetCorrupt = 1;
   609  008D  01F7               	clrf	_packetCorrupt
   610  008E  0AF7               	incf	_packetCorrupt,f
   611  008F  2886               	goto	l512
   612  0090                     __end_of_main:	
   613                           ;main.c: 185: else
   614                           ;main.c: 186: {
   615                           ;main.c: 188: packetCorrupt = 1;
   616                           
   617                           
   618                           	psect	text1
   619  0090                     __ptext1:	
   620 ;; *************** function _setup *****************
   621 ;; Defined at:
   622 ;;		line 74 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _setup
   652  0090                     _setup:	
   653                           
   654                           ;main.c: 76: OSCCONbits.IRCF = 0b1101;
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _setup: [wreg+status,2+status,0]
   658  0090  0021               	movlb	1	; select bank1
   659  0091  0819               	movf	25,w	;volatile
   660  0092  39C3               	andlw	-61
   661  0093  3834               	iorlw	52
   662  0094  0099               	movwf	25	;volatile
   663                           
   664                           ;main.c: 79: TRISC5 = 1; TRISC4 = 1; SPBRG = ((int)(4000000L/(16UL * 9600) -1)); RCSTA =
      +                           (0|0x90); TXSTA = (0x4|0|0x20);
   665  0095  168E               	bsf	14,5	;volatile
   666  0096  160E               	bsf	14,4	;volatile
   667  0097  3000               	movlw	0
   668  0098  0023               	movlb	3	; select bank3
   669  0099  009C               	movwf	28	;volatile
   670  009A  3019               	movlw	25
   671  009B  009B               	movwf	27	;volatile
   672  009C  3090               	movlw	144
   673  009D  009D               	movwf	29	;volatile
   674  009E  3024               	movlw	36
   675  009F  009E               	movwf	30	;volatile
   676                           
   677                           ;main.c: 82: TRISCbits.TRISC0 = 0;
   678  00A0  0021               	movlb	1	; select bank1
   679  00A1  100E               	bcf	14,0	;volatile
   680                           
   681                           ;main.c: 83: TRISCbits.TRISC1 = 0;
   682  00A2  108E               	bcf	14,1	;volatile
   683                           
   684                           ;main.c: 84: TRISCbits.TRISC2 = 0;
   685  00A3  110E               	bcf	14,2	;volatile
   686                           
   687                           ;main.c: 85: TRISCbits.TRISC3 = 0;
   688  00A4  118E               	bcf	14,3	;volatile
   689                           
   690                           ;main.c: 87: PORTC = 0x00;
   691  00A5  0020               	movlb	0	; select bank0
   692  00A6  018E               	clrf	14	;volatile
   693                           
   694                           ;main.c: 90: RCIE = 1;
   695  00A7  0021               	movlb	1	; select bank1
   696  00A8  1691               	bsf	17,5	;volatile
   697                           
   698                           ;main.c: 91: PEIE = 1;
   699  00A9  170B               	bsf	11,6	;volatile
   700                           
   701                           ;main.c: 92: GIE = 1;
   702  00AA  178B               	bsf	11,7	;volatile
   703  00AB  0008               	return
   704  00AC                     __end_of_setup:	
   705                           
   706                           	psect	intentry
   707  0004                     __pintentry:	
   708 ;; *************** function _ISR *****************
   709 ;; Defined at:
   710 ;;		line 44 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;		None               void
   717 ;; Registers used:
   718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;Total ram usage:        2 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    1
   731 ;; This function calls:
   732 ;;		_getch
   733 ;; This function is called by:
   734 ;;		Interrupt level 1
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738  0004                     _ISR:	
   739                           
   740                           ;incstack = 0
   741                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   742  0004  3180               	pagesel	$
   743  0005  0020               	movlb	0	; select bank0
   744  0006  087F               	movf	127,w
   745  0007  00FB               	movwf	??_ISR+1
   746                           
   747                           ;main.c: 45: if (RCIF)
   748  0008  1E91               	btfss	17,5	;volatile
   749  0009  282B               	goto	i1l43
   750                           
   751                           ;main.c: 46: {
   752                           ;main.c: 48: rxchar = getch();
   753  000A  3180  20AC  3180   	fcall	_getch
   754  000D  00FA               	movwf	??_ISR
   755  000E  087A               	movf	??_ISR,w
   756  000F  00F9               	movwf	_rxchar
   757                           
   758                           ;main.c: 49: if (packetCorrupt)
   759  0010  0877               	movf	_packetCorrupt,w
   760  0011  1903               	btfsc	3,2
   761  0012  2818               	goto	i1l578
   762                           
   763                           ;main.c: 50: {
   764                           ;main.c: 52: if (rxchar == 0x02)
   765  0013  0879               	movf	_rxchar,w
   766  0014  3A02               	xorlw	2
   767  0015  1D03               	skipz
   768  0016  282B               	goto	i1l43
   769                           
   770                           ;main.c: 53: {
   771                           ;main.c: 55: packetCorrupt = 0;
   772  0017  01F7               	clrf	_packetCorrupt
   773  0018                     i1l578:	
   774                           ;main.c: 57: else
   775                           ;main.c: 58: {
   776                           ;main.c: 59: return;
   777                           
   778                           ;main.c: 56: }
   779                           
   780                           
   781                           ;main.c: 60: }
   782                           ;main.c: 61: }
   783                           ;main.c: 62: packetBuffer[i] = rxchar;
   784  0018  0879               	movf	_rxchar,w
   785  0019  00FA               	movwf	??_ISR
   786  001A  0876               	movf	_i,w
   787  001B  3E70               	addlw	_packetBuffer& (0+255)
   788  001C  0086               	movwf	6
   789  001D  0187               	clrf	7
   790  001E  087A               	movf	??_ISR,w
   791  001F  0081               	movwf	1
   792                           
   793                           ;main.c: 63: i++;
   794  0020  3001               	movlw	1
   795  0021  00FA               	movwf	??_ISR
   796  0022  087A               	movf	??_ISR,w
   797  0023  07F6               	addwf	_i,f
   798                           
   799                           ;main.c: 64: if (i >= 6)
   800  0024  3006               	movlw	6
   801  0025  0276               	subwf	_i,w
   802  0026  1C03               	skipc
   803  0027  282B               	goto	i1l43
   804                           
   805                           ;main.c: 65: {
   806                           ;main.c: 67: packetReceived = 1;
   807  0028  01F8               	clrf	_packetReceived
   808  0029  0AF8               	incf	_packetReceived,f
   809                           
   810                           ;main.c: 68: i = 0;
   811  002A  01F6               	clrf	_i
   812  002B                     i1l43:	
   813  002B  087B               	movf	??_ISR+1,w
   814  002C  0020               	movlb	0	; select bank0
   815  002D  00FF               	movwf	127
   816  002E  0009               	retfie
   817  002F                     __end_of_ISR:	
   818                           
   819                           	psect	text3
   820  00AC                     __ptext3:	
   821 ;; *************** function _getch *****************
   822 ;; Defined at:
   823 ;;		line 15 in file "usart.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      unsigned char 
   830 ;; Registers used:
   831 ;;		wreg
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_ISR
   847 ;;		_getche
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _getch
   853  00AC                     _getch:	
   854  00AC                     i1l97:	
   855                           ;usart.c: 18: continue;
   856                           
   857                           ;usart.c: 17: while(!RCIF)
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _getch: [wreg]
   861                           
   862  00AC  0020               	movlb	0	; select bank0
   863  00AD  1E91               	btfss	17,5	;volatile
   864  00AE  28AC               	goto	i1l97
   865                           
   866                           ;usart.c: 19: return RCREG;
   867  00AF  0023               	movlb	3	; select bank3
   868  00B0  0819               	movf	25,w	;volatile
   869  00B1  0008               	return
   870  00B2                     __end_of_getch:	
   871  007E                     btemp	set	126	;btemp
   872  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      11      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Jan  7 05:14:48 2014

                      _i 0076              __CFG_CP$OFF 0000                       l69 008D  
                    l512 0086                      l524 004E                      l532 005A  
                    l516 0042                      l542 006A                      l552 0079  
                    l528 0054                      l538 0063                      l546 0070  
                    l556 007F                      _GIE 005F                      _ISR 0004  
           __CFG_BORV$LO 0000             __CFG_LVP$OFF 0000                     ?_ISR 007A  
                   _PEIE 005E                     i1l43 002B                     _RCIE 048D  
                   _RCIF 008D                     i1l97 00AC                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _main 003E                     fsr1h 0007  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 002F            __CFG_IESO$OFF 0000  
    __CFG_PLLEN$DISABLED 0000            __CFG_MCLRE$ON 0000                    ??_ISR 007A  
                  ?_main 007A            __CFG_WDTE$OFF 0000                    i1l578 0018  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _PORTC 000E                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000                    _getch 00AC  
                  _setup 0090                    wtemp0 007E          __initialization 0031  
           __end_of_main 0090           __CFG_LPBOR$OFF 0000                   ??_main 007C  
    __CFG_USBLSCLK$48MHz 0000                   ?_getch 007A                   ?_setup 007A  
          _packetCorrupt 0077                   _TRISC4 0474                   _TRISC5 0475  
         __CFG_STVREN$ON 0000                   _rxchar 0079  __end_of__initialization 003B  
         __pcstackCOMMON 007A            __end_of_getch 00B2            __end_of_setup 00AC  
                ??_getch 007A                  ??_setup 007C               __pmaintext 003E  
        __CFG_PLLMULT$3x 0000               __pintentry 0004           _packetReceived 0078  
                __ptext0 0000                  __ptext1 0090                  __ptext3 00AC  
           __size_of_ISR 002B     end_of_initialization 003B         __CFG_CLKOUTEN$ON 0000  
       __CFG_FOSC$INTOSC 0000                _TRISCbits 008E      start_initialization 0031  
            __end_of_ISR 002F             _packetBuffer 0070              __pbssCOMMON 0070  
         __size_of_getch 0006           __size_of_setup 001C            __size_of_main 0052  
               intlevel1 0000               _OSCCONbits 0099      __CFG_CPUDIV$CLKDIV2 0000  
