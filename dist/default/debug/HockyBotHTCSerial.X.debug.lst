

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Jan  7 21:50:38 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000E                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0015                     	;# 
    30  0016                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001B                     	;# 
    37  001C                     	;# 
    38  008C                     	;# 
    39  008E                     	;# 
    40  0091                     	;# 
    41  0092                     	;# 
    42  0095                     	;# 
    43  0096                     	;# 
    44  0097                     	;# 
    45  0098                     	;# 
    46  0099                     	;# 
    47  009A                     	;# 
    48  009B                     	;# 
    49  009B                     	;# 
    50  009C                     	;# 
    51  009D                     	;# 
    52  009E                     	;# 
    53  009F                     	;# 
    54  010C                     	;# 
    55  010E                     	;# 
    56  0111                     	;# 
    57  0112                     	;# 
    58  0113                     	;# 
    59  0114                     	;# 
    60  0115                     	;# 
    61  0116                     	;# 
    62  0117                     	;# 
    63  0118                     	;# 
    64  0119                     	;# 
    65  011D                     	;# 
    66  018C                     	;# 
    67  018E                     	;# 
    68  0191                     	;# 
    69  0191                     	;# 
    70  0192                     	;# 
    71  0193                     	;# 
    72  0193                     	;# 
    73  0194                     	;# 
    74  0195                     	;# 
    75  0196                     	;# 
    76  0197                     	;# 
    77  0199                     	;# 
    78  019A                     	;# 
    79  019B                     	;# 
    80  019B                     	;# 
    81  019C                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  019F                     	;# 
    85  020C                     	;# 
    86  0211                     	;# 
    87  0211                     	;# 
    88  0212                     	;# 
    89  0212                     	;# 
    90  0213                     	;# 
    91  0213                     	;# 
    92  0214                     	;# 
    93  0214                     	;# 
    94  0215                     	;# 
    95  0215                     	;# 
    96  0215                     	;# 
    97  0216                     	;# 
    98  0216                     	;# 
    99  0217                     	;# 
   100  0217                     	;# 
   101  0391                     	;# 
   102  0392                     	;# 
   103  0393                     	;# 
   104  039A                     	;# 
   105  039B                     	;# 
   106  0611                     	;# 
   107  0612                     	;# 
   108  0613                     	;# 
   109  0613                     	;# 
   110  0614                     	;# 
   111  0615                     	;# 
   112  0616                     	;# 
   113  0616                     	;# 
   114  0691                     	;# 
   115  0692                     	;# 
   116  0693                     	;# 
   117  0694                     	;# 
   118  0695                     	;# 
   119  0E8E                     	;# 
   120  0E8F                     	;# 
   121  0E90                     	;# 
   122  0E91                     	;# 
   123  0E92                     	;# 
   124  0E93                     	;# 
   125  0E94                     	;# 
   126  0E94                     	;# 
   127  0E95                     	;# 
   128  0E96                     	;# 
   129  0E97                     	;# 
   130  0E98                     	;# 
   131  0E99                     	;# 
   132  0E9A                     	;# 
   133  0E9B                     	;# 
   134  0E9C                     	;# 
   135  0E9D                     	;# 
   136  0E9E                     	;# 
   137  0E9F                     	;# 
   138  0FE4                     	;# 
   139  0FE5                     	;# 
   140  0FE6                     	;# 
   141  0FE7                     	;# 
   142  0FE8                     	;# 
   143  0FE9                     	;# 
   144  0FEA                     	;# 
   145  0FEB                     	;# 
   146  0FED                     	;# 
   147  0FEE                     	;# 
   148  0FEF                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000E                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  008C                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010E                     	;# 
   192  0111                     	;# 
   193  0112                     	;# 
   194  0113                     	;# 
   195  0114                     	;# 
   196  0115                     	;# 
   197  0116                     	;# 
   198  0117                     	;# 
   199  0118                     	;# 
   200  0119                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018E                     	;# 
   204  0191                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0194                     	;# 
   210  0195                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019D                     	;# 
   219  019E                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0391                     	;# 
   238  0392                     	;# 
   239  0393                     	;# 
   240  039A                     	;# 
   241  039B                     	;# 
   242  0611                     	;# 
   243  0612                     	;# 
   244  0613                     	;# 
   245  0613                     	;# 
   246  0614                     	;# 
   247  0615                     	;# 
   248  0616                     	;# 
   249  0616                     	;# 
   250  0691                     	;# 
   251  0692                     	;# 
   252  0693                     	;# 
   253  0694                     	;# 
   254  0695                     	;# 
   255  0E8E                     	;# 
   256  0E8F                     	;# 
   257  0E90                     	;# 
   258  0E91                     	;# 
   259  0E92                     	;# 
   260  0E93                     	;# 
   261  0E94                     	;# 
   262  0E94                     	;# 
   263  0E95                     	;# 
   264  0E96                     	;# 
   265  0E97                     	;# 
   266  0E98                     	;# 
   267  0E99                     	;# 
   268  0E9A                     	;# 
   269  0E9B                     	;# 
   270  0E9C                     	;# 
   271  0E9D                     	;# 
   272  0E9E                     	;# 
   273  0E9F                     	;# 
   274  0FE4                     	;# 
   275  0FE5                     	;# 
   276  0FE6                     	;# 
   277  0FE7                     	;# 
   278  0FE8                     	;# 
   279  0FE9                     	;# 
   280  0FEA                     	;# 
   281  0FEB                     	;# 
   282  0FED                     	;# 
   283  0FEE                     	;# 
   284  0FEF                     	;# 
   285  005F                     _GIE	set	95
   286  005E                     _PEIE	set	94
   287  008D                     _RCIF	set	141
   288  008C                     _TXIF	set	140
   289  0099                     _OSCCONbits	set	153
   290  008E                     _TRISCbits	set	142
   291  048D                     _RCIE	set	1165
   292  0474                     _TRISC4	set	1140
   293  0475                     _TRISC5	set	1141
   294  010E                     _LATC	set	270
   295  019B                     _SPBRG	set	411
   296  018E                     _ANSELC	set	398
   297  0199                     _RCREG	set	409
   298  019D                     _RCSTA	set	413
   299  019A                     _TXREG	set	410
   300  019E                     _TXSTA	set	414
   301                           
   302                           	psect	text0
   303  0000                     __ptext0:	
   304                           
   305                           ;psect for function _getch
   306                           ; #config settings
   307  0000                     
   308                           	psect	cinit
   309  0031                     start_initialization:	
   310  0031                     __initialization:	
   311                           
   312                           ; Clear objects allocated to COMMON
   313  0031  01F0               	clrf	__pbssCOMMON& (0+127)
   314  0032  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0033  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0034  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   317  0035  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   318  0036  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   319  0037  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   320  0038  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   321  0039  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   322  003A  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   323  003B                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  003B                     __end_of__initialization:	
   327  003B  0020               	movlb	0
   328  003C  3180  283E         	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0070                     __pbssCOMMON:	
   332  0070                     _packetBuffer:	
   333  0070                     	ds	6
   334  0076                     _i:	
   335  0076                     	ds	1
   336  0077                     _packetCorrupt:	
   337  0077                     	ds	1
   338  0078                     _packetReceived:	
   339  0078                     	ds	1
   340  0079                     _rxchar:	
   341  0079                     	ds	1
   342                           
   343                           	psect	cstackCOMMON
   344  007A                     __pcstackCOMMON:	
   345  007A                     ??_getch:	
   346  007A                     ?_ISR:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  007A                     ??_ISR:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  007A                     ?_setup:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  007A                     ?_main:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  007A                     ?_getch:	
   359                           ; 0 bytes @ 0x0
   360                           
   361                           
   362                           ; 1 bytes @ 0x0
   363  007A                     	ds	2
   364  007C                     ??_setup:	
   365  007C                     ??_main:	
   366                           ; 0 bytes @ 0x2
   367                           
   368                           
   369                           	psect	maintext
   370  003E                     __pmaintext:	
   371                           ; 0 bytes @ 0x2
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 100 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;		None               void
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 17F/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels required when called:    3
   397 ;; This function calls:
   398 ;;		_setup
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  003E                     _main:	
   407                           
   408                           ;main.c: 101: setup();
   409                           
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   412  003E  3180  2090  3180   	fcall	_setup
   413  0041  2886               	goto	l520
   414  0042                     l524:	
   415  0042  0875               	movf	_packetBuffer+5,w
   416  0043  3A03               	xorlw	3
   417  0044  1D03               	skipz
   418  0045  288D               	goto	l71
   419                           
   420                           ;main.c: 108: {
   421                           ;main.c: 110: if (packetBuffer[1] == 0)
   422  0046  08F1               	movf	_packetBuffer+1,f
   423  0047  1D03               	skipz
   424  0048  285A               	goto	l540
   425                           
   426                           ;main.c: 111: {
   427                           ;main.c: 113: if (packetBuffer[3] == 0)
   428  0049  08F3               	movf	_packetBuffer+3,f
   429  004A  1D03               	skipz
   430  004B  284E               	goto	l532
   431                           
   432                           ;main.c: 114: {
   433                           ;main.c: 116: LATC = 0b00000100;
   434  004C  3004               	movlw	4
   435  004D  2884               	goto	L7
   436  004E                     l532:	
   437                           ;main.c: 117: }
   438                           
   439                           
   440                           ;main.c: 118: else if (packetBuffer[3] == 1)
   441  004E  0873               	movf	_packetBuffer+3,w
   442  004F  3A01               	xorlw	1
   443  0050  1D03               	skipz
   444  0051  2854               	goto	l536
   445                           
   446                           ;main.c: 119: {
   447                           ;main.c: 121: LATC = 0b00001001;
   448  0052  3009               	movlw	9
   449  0053  2884               	goto	L7
   450  0054                     l536:	
   451                           ;main.c: 122: }
   452                           
   453                           
   454                           ;main.c: 123: else if (packetBuffer[3] == 2)
   455  0054  0873               	movf	_packetBuffer+3,w
   456  0055  3A02               	xorlw	2
   457  0056  1D03               	skipz
   458  0057  288D               	goto	l71
   459                           
   460                           ;main.c: 124: {
   461                           ;main.c: 126: LATC = 0b00001000;
   462  0058  3008               	movlw	8
   463  0059  2884               	goto	L7
   464  005A                     l540:	
   465                           ;main.c: 132: }
   466                           ;main.c: 133: }
   467                           
   468                           ;main.c: 128: else
   469                           ;main.c: 129: {
   470                           ;main.c: 131: packetCorrupt = 1;
   471                           
   472                           ;main.c: 127: }
   473                           
   474                           
   475                           ;main.c: 134: else if (packetBuffer[1] == 1)
   476  005A  0871               	movf	_packetBuffer+1,w
   477  005B  3A01               	xorlw	1
   478  005C  1D03               	skipz
   479  005D  2870               	goto	l554
   480                           
   481                           ;main.c: 135: {
   482                           ;main.c: 137: if (packetBuffer[3] == 0)
   483  005E  08F3               	movf	_packetBuffer+3,f
   484  005F  1D03               	skipz
   485  0060  2863               	goto	l546
   486                           
   487                           ;main.c: 138: {
   488                           ;main.c: 140: LATC = 0b00000101;
   489  0061  3005               	movlw	5
   490  0062  2884               	goto	L7
   491  0063                     l546:	
   492                           ;main.c: 141: }
   493                           
   494                           
   495                           ;main.c: 142: else if (packetBuffer[3] == 1)
   496  0063  0873               	movf	_packetBuffer+3,w
   497  0064  3A01               	xorlw	1
   498  0065  1D03               	skipz
   499  0066  286A               	goto	l550
   500                           
   501                           ;main.c: 143: {
   502                           ;main.c: 145: LATC = 0b00000000;
   503  0067  0022               	movlb	2	; select bank2
   504  0068  018E               	clrf	14	;volatile
   505                           
   506                           ;main.c: 146: }
   507  0069  2886               	goto	l520
   508  006A                     l550:	
   509                           
   510                           ;main.c: 147: else if (packetBuffer[3] == 2)
   511  006A  0873               	movf	_packetBuffer+3,w
   512  006B  3A02               	xorlw	2
   513  006C  1D03               	skipz
   514  006D  288D               	goto	l71
   515                           
   516                           ;main.c: 148: {
   517                           ;main.c: 150: LATC = 0b00001010;
   518  006E  300A               	movlw	10
   519  006F  2884               	goto	L7
   520  0070                     l554:	
   521                           ;main.c: 156: }
   522                           ;main.c: 157: }
   523                           
   524                           ;main.c: 152: else
   525                           ;main.c: 153: {
   526                           ;main.c: 155: packetCorrupt = 1;
   527                           
   528                           ;main.c: 151: }
   529                           
   530                           
   531                           ;main.c: 158: else if (packetBuffer[1] == 2)
   532  0070  0871               	movf	_packetBuffer+1,w
   533  0071  3A02               	xorlw	2
   534  0072  1D03               	skipz
   535  0073  288D               	goto	l71
   536                           
   537                           ;main.c: 159: {
   538                           ;main.c: 161: if (packetBuffer[3] == 0)
   539  0074  08F3               	movf	_packetBuffer+3,f
   540  0075  1D03               	skipz
   541  0076  2879               	goto	l560
   542                           
   543                           ;main.c: 162: {
   544                           ;main.c: 164: LATC = 0b00000010;
   545  0077  3002               	movlw	2
   546  0078  2884               	goto	L7
   547  0079                     l560:	
   548                           ;main.c: 165: }
   549                           
   550                           
   551                           ;main.c: 166: else if (packetBuffer[3] == 1)
   552  0079  0873               	movf	_packetBuffer+3,w
   553  007A  3A01               	xorlw	1
   554  007B  1D03               	skipz
   555  007C  287F               	goto	l564
   556                           
   557                           ;main.c: 167: {
   558                           ;main.c: 169: LATC = 0b00000110;
   559  007D  3006               	movlw	6
   560  007E  2884               	goto	L7
   561  007F                     l564:	
   562                           ;main.c: 170: }
   563                           
   564                           
   565                           ;main.c: 171: else if (packetBuffer[3] == 2)
   566  007F  0873               	movf	_packetBuffer+3,w
   567  0080  3A02               	xorlw	2
   568  0081  1D03               	skipz
   569  0082  288D               	goto	l71
   570                           
   571                           ;main.c: 172: {
   572                           ;main.c: 174: LATC = 0b00000001;
   573  0083  3001               	movlw	1
   574  0084                     L7:	
   575  0084  0022               	movlb	2	; select bank2
   576  0085  008E               	movwf	14	;volatile
   577  0086                     l520:	
   578                           ;main.c: 103: while (1)
   579                           
   580                           ;main.c: 186: }
   581                           ;main.c: 188: }
   582                           
   583                           ;main.c: 175: }
   584                           
   585                           
   586                           ;main.c: 104: {
   587                           ;main.c: 105: if (packetReceived)
   588  0086  0878               	movf	_packetReceived,w
   589  0087  1903               	btfsc	3,2
   590  0088  2886               	goto	l520
   591                           
   592                           ;main.c: 106: {
   593                           ;main.c: 107: if (packetBuffer[0] == 0x02 && packetBuffer[5] == 0x03)
   594  0089  0870               	movf	_packetBuffer,w
   595  008A  3A02               	xorlw	2
   596  008B  1903               	btfsc	3,2
   597  008C  2842               	goto	l524
   598  008D                     l71:	
   599                           ;main.c: 180: }
   600                           ;main.c: 181: }
   601                           
   602                           ;main.c: 176: else
   603                           ;main.c: 177: {
   604                           ;main.c: 179: packetCorrupt = 1;
   605                           
   606                           
   607                           ;main.c: 182: else
   608                           ;main.c: 183: {
   609                           ;main.c: 185: packetCorrupt = 1;
   610  008D  01F7               	clrf	_packetCorrupt
   611  008E  0AF7               	incf	_packetCorrupt,f
   612  008F  2886               	goto	l520
   613  0090                     __end_of_main:	
   614                           ;main.c: 189: else
   615                           ;main.c: 190: {
   616                           ;main.c: 192: packetCorrupt = 1;
   617                           
   618                           
   619                           	psect	text1
   620  0090                     __ptext1:	
   621 ;; *************** function _setup *****************
   622 ;; Defined at:
   623 ;;		line 74 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;		None               void
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    2
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _setup
   653  0090                     _setup:	
   654                           
   655                           ;main.c: 76: OSCCONbits.IRCF = 0b1111;
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _setup: [wreg+status,2+status,0]
   659  0090  303C               	movlw	60
   660  0091  0021               	movlb	1	; select bank1
   661  0092  0499               	iorwf	25,f	;volatile
   662                           
   663                           ;main.c: 79: TRISC5 = 1; TRISC4 = 1; SPBRG = ((int)(16000000L/(16UL * 9600) -1)); RCSTA 
      +                          = (0|0x90); TXSTA = (0x4|0|0x20);
   664  0093  168E               	bsf	14,5	;volatile
   665  0094  160E               	bsf	14,4	;volatile
   666  0095  3000               	movlw	0
   667  0096  0023               	movlb	3	; select bank3
   668  0097  009C               	movwf	28	;volatile
   669  0098  3067               	movlw	103
   670  0099  009B               	movwf	27	;volatile
   671  009A  3090               	movlw	144
   672  009B  009D               	movwf	29	;volatile
   673  009C  3024               	movlw	36
   674  009D  009E               	movwf	30	;volatile
   675                           
   676                           ;main.c: 82: TRISCbits.TRISC0 = 0;
   677  009E  0021               	movlb	1	; select bank1
   678  009F  100E               	bcf	14,0	;volatile
   679                           
   680                           ;main.c: 83: TRISCbits.TRISC1 = 0;
   681  00A0  108E               	bcf	14,1	;volatile
   682                           
   683                           ;main.c: 84: TRISCbits.TRISC2 = 0;
   684  00A1  110E               	bcf	14,2	;volatile
   685                           
   686                           ;main.c: 85: TRISCbits.TRISC3 = 0;
   687  00A2  118E               	bcf	14,3	;volatile
   688                           
   689                           ;main.c: 86: TRISCbits.TRISC4 = 0;
   690  00A3  120E               	bcf	14,4	;volatile
   691                           
   692                           ;main.c: 87: TRISCbits.TRISC5 = 1;
   693  00A4  168E               	bsf	14,5	;volatile
   694                           
   695                           ;main.c: 89: ANSELC = 0x00;
   696  00A5  0023               	movlb	3	; select bank3
   697  00A6  018E               	clrf	14	;volatile
   698                           
   699                           ;main.c: 91: LATC = 0x00;
   700  00A7  0022               	movlb	2	; select bank2
   701  00A8  018E               	clrf	14	;volatile
   702                           
   703                           ;main.c: 94: RCIE = 1;
   704  00A9  0021               	movlb	1	; select bank1
   705  00AA  1691               	bsf	17,5	;volatile
   706                           
   707                           ;main.c: 95: PEIE = 1;
   708  00AB  170B               	bsf	11,6	;volatile
   709                           
   710                           ;main.c: 96: GIE = 1;
   711  00AC  178B               	bsf	11,7	;volatile
   712  00AD  0008               	return
   713  00AE                     __end_of_setup:	
   714                           
   715                           	psect	intentry
   716  0004                     __pintentry:	
   717 ;; *************** function _ISR *****************
   718 ;; Defined at:
   719 ;;		line 44 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;Total ram usage:        2 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    1
   740 ;; This function calls:
   741 ;;		_getch
   742 ;; This function is called by:
   743 ;;		Interrupt level 1
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747  0004                     _ISR:	
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   751  0004  3180               	pagesel	$
   752  0005  0020               	movlb	0	; select bank0
   753  0006  087F               	movf	127,w
   754  0007  00FB               	movwf	??_ISR+1
   755                           
   756                           ;main.c: 45: if (RCIF)
   757  0008  1E91               	btfss	17,5	;volatile
   758  0009  282B               	goto	i1l45
   759                           
   760                           ;main.c: 46: {
   761                           ;main.c: 48: rxchar = getch();
   762  000A  3180  20AE  3180   	fcall	_getch
   763  000D  00FA               	movwf	??_ISR
   764  000E  087A               	movf	??_ISR,w
   765  000F  00F9               	movwf	_rxchar
   766                           
   767                           ;main.c: 49: if (packetCorrupt)
   768  0010  0877               	movf	_packetCorrupt,w
   769  0011  1903               	btfsc	3,2
   770  0012  2818               	goto	i1l586
   771                           
   772                           ;main.c: 50: {
   773                           ;main.c: 52: if (rxchar == 0x02)
   774  0013  0879               	movf	_rxchar,w
   775  0014  3A02               	xorlw	2
   776  0015  1D03               	skipz
   777  0016  282B               	goto	i1l45
   778                           
   779                           ;main.c: 53: {
   780                           ;main.c: 55: packetCorrupt = 0;
   781  0017  01F7               	clrf	_packetCorrupt
   782  0018                     i1l586:	
   783                           ;main.c: 57: else
   784                           ;main.c: 58: {
   785                           ;main.c: 59: return;
   786                           
   787                           ;main.c: 56: }
   788                           
   789                           
   790                           ;main.c: 60: }
   791                           ;main.c: 61: }
   792                           ;main.c: 62: packetBuffer[i] = rxchar;
   793  0018  0879               	movf	_rxchar,w
   794  0019  00FA               	movwf	??_ISR
   795  001A  0876               	movf	_i,w
   796  001B  3E70               	addlw	_packetBuffer& (0+255)
   797  001C  0086               	movwf	6
   798  001D  0187               	clrf	7
   799  001E  087A               	movf	??_ISR,w
   800  001F  0081               	movwf	1
   801                           
   802                           ;main.c: 63: i++;
   803  0020  3001               	movlw	1
   804  0021  00FA               	movwf	??_ISR
   805  0022  087A               	movf	??_ISR,w
   806  0023  07F6               	addwf	_i,f
   807                           
   808                           ;main.c: 64: if (i >= 6)
   809  0024  3006               	movlw	6
   810  0025  0276               	subwf	_i,w
   811  0026  1C03               	skipc
   812  0027  282B               	goto	i1l45
   813                           
   814                           ;main.c: 65: {
   815                           ;main.c: 67: packetReceived = 1;
   816  0028  01F8               	clrf	_packetReceived
   817  0029  0AF8               	incf	_packetReceived,f
   818                           
   819                           ;main.c: 68: i = 0;
   820  002A  01F6               	clrf	_i
   821  002B                     i1l45:	
   822  002B  087B               	movf	??_ISR+1,w
   823  002C  0020               	movlb	0	; select bank0
   824  002D  00FF               	movwf	127
   825  002E  0009               	retfie
   826  002F                     __end_of_ISR:	
   827                           
   828                           	psect	text3
   829  00AE                     __ptext3:	
   830 ;; *************** function _getch *****************
   831 ;; Defined at:
   832 ;;		line 15 in file "usart.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_ISR
   856 ;;		_getche
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _getch
   862  00AE                     _getch:	
   863  00AE                     i1l99:	
   864                           ;usart.c: 18: continue;
   865                           
   866                           ;usart.c: 17: while(!RCIF)
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _getch: [wreg]
   870                           
   871  00AE  0020               	movlb	0	; select bank0
   872  00AF  1E91               	btfss	17,5	;volatile
   873  00B0  28AE               	goto	i1l99
   874                           
   875                           ;usart.c: 19: return RCREG;
   876  00B1  0023               	movlb	3	; select bank3
   877  00B2  0819               	movf	25,w	;volatile
   878  00B3  0008               	return
   879  00B4                     __end_of_getch:	
   880  007E                     btemp	set	126	;btemp
   881  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      11      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Jan  7 21:50:38 2014

                      _i 0076              __CFG_CP$OFF 0000                       l71 008D  
                    l520 0086                      l532 004E                      l540 005A  
                    l524 0042                      l550 006A                      l560 0079  
                    l536 0054                      l546 0063                      l554 0070  
                    l564 007F                      _GIE 005F                      _ISR 0004  
           __CFG_BORV$LO 0000             __CFG_LVP$OFF 0000                     ?_ISR 007A  
                   _LATC 010E                     _PEIE 005E                     _RCIE 048D  
                   _RCIF 008D                     i1l45 002B                     i1l99 00AE  
                   _TXIF 008C             __CFG_WRT$OFF 0000                     _main 003E  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 002F  
          __CFG_IESO$OFF 0000      __CFG_PLLEN$DISABLED 0000            __CFG_MCLRE$ON 0000  
                  ??_ISR 007A                    ?_main 007A            __CFG_WDTE$OFF 0000  
                  i1l586 0018                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000                    _getch 00AE  
                  _setup 0090                    wtemp0 007E          __initialization 0031  
           __end_of_main 0090           __CFG_LPBOR$OFF 0000                   ??_main 007C  
    __CFG_USBLSCLK$48MHz 0000                   ?_getch 007A                   ?_setup 007A  
                 _ANSELC 018E            _packetCorrupt 0077                   _TRISC4 0474  
                 _TRISC5 0475           __CFG_STVREN$ON 0000                   _rxchar 0079  
__end_of__initialization 003B           __pcstackCOMMON 007A            __end_of_getch 00B4  
          __end_of_setup 00AE                  ??_getch 007A                  ??_setup 007C  
             __pmaintext 003E          __CFG_PLLMULT$3x 0000               __pintentry 0004  
         _packetReceived 0078                  __ptext0 0000                  __ptext1 0090  
                __ptext3 00AE             __size_of_ISR 002B     end_of_initialization 003B  
       __CFG_CLKOUTEN$ON 0000         __CFG_FOSC$INTOSC 0000                _TRISCbits 008E  
    start_initialization 0031              __end_of_ISR 002F             _packetBuffer 0070  
            __pbssCOMMON 0070           __size_of_getch 0006           __size_of_setup 001E  
          __size_of_main 0052                 intlevel1 0000               _OSCCONbits 0099  
    __CFG_CPUDIV$CLKDIV2 0000  
